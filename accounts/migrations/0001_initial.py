# Generated by Django 5.1.6 on 2025-04-21 00:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('surname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phoneNumber', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('Permission', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('communityID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('communityDescription', models.TextField(blank=True, null=True)),
                ('communityCategory', models.CharField(blank=True, max_length=100, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Communities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommunityMembership',
            fields=[
                ('membershipID', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(default='Member', max_length=50)),
                ('joinedAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'CommunityMemberships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images/')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profileID', models.AutoField(primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, null=True)),
                ('major', models.CharField(blank=True, max_length=100, null=True)),
                ('academicYear', models.IntegerField(blank=True, null=True)),
                ('campusInvolvement', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(default='profile_pics/default.jpg', upload_to='profile_pics/')),
            ],
            options={
                'db_table': 'Profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommunityRequest',
            fields=[
                ('requestID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('communityDescription', models.TextField(blank=True, null=True)),
                ('communityCategory', models.CharField(blank=True, max_length=100, null=True)),
                ('requestedAt', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('reviewedAt', models.DateTimeField(blank=True, null=True)),
                ('adminNote', models.TextField(blank=True, null=True)),
                ('requestedBy', models.ForeignKey(db_column='requestedBy', on_delete=django.db.models.deletion.CASCADE, related_name='community_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewedBy', models.ForeignKey(blank=True, db_column='reviewedBy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'CommunityRequests',
            },
        ),
    ]
